import{t,g as i,h as u}from"./index-Dt3GVyhz.js";const o="http://localhost:5000/api",c=(r=!0)=>{const a=i("token");if(!a)return null;const e={Authorization:`Bearer ${a}`};return r&&(e["Content-Type"]="application/json"),e},h=async r=>{const a=c(!0),e=i("token");if(a){if(!r?.Firstname)return t.warning("Name is required"),null;try{const s=new FormData;s.append("firstname",r.Firstname),s.append("lastname",r.Lastname),s.append("image",r?.image);const d=await(await fetch(`${o}/user/update`,{method:"PUT",headers:{Authorization:`Bearer ${e}`},body:s})).json();return d.success?(t.success(d.message),u("user",JSON.stringify(d?.user)),d.user):(t.error(d.message||"Update failed"),null)}catch(s){return t.error(s.message),null}}},f=async(r,a)=>{const e=c(!0);if(e){if(!r||!a){t.warning("All fields are required");return}try{const n=await(await fetch(`${o}/user/update-password`,{method:"PUT",headers:e,body:JSON.stringify({currentPassword:r,newPassword:a})})).json();n?.success?t.success(n?.message||"Password updated successfully"):t.error(n?.message||"Failed to update password")}catch(s){t.error(s.message)}}},g=async()=>{const r=c(!0);if(!r)return null;try{const e=await(await fetch(`${o}/getAddress`,{method:"GET",headers:r})).json();return e?.success?e?.addresses:(t.error(e?.message||"Failed to fetch address"),null)}catch(a){return t.error(a.message),null}},m=async(r,a,e)=>{const s=c(!0);if(s){if(!r||!a||!e){t.warning("All fields are required");return}try{const d=await(await fetch(`${o}/postAddress`,{method:"POST",headers:s,body:JSON.stringify({address_line:r,city:a,state:e})})).json();if(d.success)return t.success(d?.message||"Address added successfully"),d;t.error(d?.message||"Failed to add address")}catch(n){t.error(n.message)}}};async function p(r,a){const e=c(!0);if(e){if(!r||!a){t.warning("Address ID and updated data are required");return}try{const s=await fetch(`${o}/editAddress/${r}`,{method:"PUT",headers:e,body:JSON.stringify(a)}),n=await s.json();if(s.ok)return t.success(n?.message||"Address updated successfully"),n}catch(s){t.error(s.message),console.error("Error editing address:",s)}}}async function w(r){const a=c(!0);if(a)try{const e=await fetch(`${o}/deleteAddress/${r}`,{method:"DELETE",headers:a}),s=await e.json();if(e.ok)return t.success(s.message||"Address Removed Successfully"),s;t.error(s.message||"Failed to delete address")}catch(e){throw console.error("Error deleting address:",e),t.error(e.message),e}}export{f as a,w as d,p as e,g,h,m as p};
